---
- name: retrieve information about current user
  user: name={{ ansible_user_id }} state=present
  register: current_user

- name: ensure authorized_keys.d directory is present
  file: path={{ current_user["home"] }}/.ssh/authorized_keys.d state=directory owner={{ current_user["uid"] }} group={{ current_user["group"] }} mode=0700
  when: ssh_public_keys_directory is defined

# This was previously synchronise, but I couldn't get it to not prompt for a
# password, which was super annoying half way through a play.
- name: update SSH keys on remote host
  copy: src="{{ ssh_public_keys_directory }}/" dest="{{ current_user["home"] }}/.ssh/authorized_keys.d"
  when: ssh_public_keys_directory is defined
  register: ssh_keys_sync

- name: regenerate authorized_keys file for CoreOS
  command: update-ssh-keys
  when: ssh_keys_sync | changed and ansible_distribution == "CoreOS"

- name: regenerate authorized_keys file for Ubuntu
  raw: cat {{ current_user["home"] }}/.ssh/authorized_keys.d/* > {{ current_user["home"] }}/.ssh/authorized_keys
  when: ssh_keys_sync | changed and (ansible_distribution == "Ubuntu" or ansible_distribution == 'Debian')

- name: Disable password login via SSH
  lineinfile: dest=/etc/ssh/sshd_config regexp="^#?PasswordAuthentication" line="PasswordAuthentication {{ password_login_permitted }}"
